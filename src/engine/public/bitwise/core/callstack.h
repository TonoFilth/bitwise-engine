#pragma once

#include "bitwise/core/macros.h"

namespace bw
{
////////////////////////////////////////////////////////////////////////////////
/// \brief Brief description.
/// \todo Write brief description.
////////////////////////////////////////////////////////////////////////////////
struct StackFrame
{
    static const size_t kMaxFunctionName = 128;
    static const size_t kMaxFileName     = 256;

    char function[kMaxFunctionName];
    char filename[kMaxFileName];
    unsigned line;
    unsigned depth;
    void* address;
    
    StackFrame* next;   ///< Points to the next stack frame
    StackFrame* prev;   ///< Points to the previous stack frame
};

////////////////////////////////////////////////////////////////////////////////
/// \brief Brief description.
/// \todo Write brief description.
////////////////////////////////////////////////////////////////////////////////
namespace callstack
{
    ////////////////////////////////////////////////////////////////////////////
	/// \brief Brief description.
	/// \todo Write brief description.
	////////////////////////////////////////////////////////////////////////////
    typedef size_t (*StackFrameFormatter)(StackFrame& stackFrame, char* buffer, size_t bufferSize);

    ////////////////////////////////////////////////////////////////////////////
    /// \brief Brief description.
    /// \todo Write brief description.
    ////////////////////////////////////////////////////////////////////////////
    BW_API StackFrameFormatter set_stack_frame_formatter(StackFrameFormatter formatter);

	////////////////////////////////////////////////////////////////////////////
	/// \brief Brief description.
	/// \todo Write brief description.
	////////////////////////////////////////////////////////////////////////////
    BW_API StackFrame* walk(int skip = 1);

	////////////////////////////////////////////////////////////////////////////
	/// \brief Brief description.
	/// \todo Write brief description.
	////////////////////////////////////////////////////////////////////////////
    BW_API size_t to_string(StackFrame& frame, char* buffer, size_t bufferSize);

}   // namespace callstack
}   // namespace bw

////////////////////////////////////////////////////////////////////////////////
/// \struct bw::StackFrame
/// \ingroup core
///
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// \namespace bw::callstack
/// \ingroup core
///
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////