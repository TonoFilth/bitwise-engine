#include "bitwise/core/cstring.h"
#include "bitwise/memory/trace_allocator.h"

namespace bw
{

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
TraceAllocator::TraceAllocator(Allocator& allocator, const char* allocatorName) :
    m_allocator(&allocator),
    m_allocationCount(0)
{
    cstring::copy(m_name, kMaxAllocatorName, allocatorName);
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
TraceAllocator::~TraceAllocator()
{
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
void* TraceAllocator::allocate(size_t size, size_t alignment)
{
    ++m_allocationCount;
    return m_allocator->allocate(size, alignment);
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
void TraceAllocator::deallocate(void* memory)
{
    m_allocator->deallocate(memory);
    --m_allocationCount;
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
size_t TraceAllocator::allocatedSize() const
{
    return m_allocator->allocatedSize();
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
size_t TraceAllocator::allocatedSize(void* memory) const
{
    return m_allocator->allocatedSize(memory);
}

}	// namespace bw