#include "bitwise/core/assert.h"
#include "bitwise/memory/heap_allocator.h"
#include "bitwise/memory/internal.h"

namespace bw
{

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
HeapAllocator::HeapAllocator() :
    m_allocatedSize(0)
{
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
HeapAllocator::~HeapAllocator()
{
    BW_ASSERT(m_allocatedSize == 0, "Not all memory was freed");
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
void* HeapAllocator::allocate(size_t size, size_t* allocatedSize, size_t alignment)
{
    return bw::internal::memory::malloc(size, alignment);
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
void HeapAllocator::deallocate(void* memory)
{
    bw::internal::memory::mfree(memory);
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
size_t HeapAllocator::allocatedSize() const
{
    return 0;
}

////////////////////////////////////////////////////////////////////////////////
/// \details Detailed description.
/// \todo Write detailed description.
////////////////////////////////////////////////////////////////////////////////
size_t HeapAllocator::allocatedSize(void* memory) const
{
    return 0;
}

}	// namespace bw